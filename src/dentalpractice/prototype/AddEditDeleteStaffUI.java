/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dentalpractice.prototype;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.script.ScriptEngine.FILENAME;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wakey
 */
public class AddEditDeleteStaffUI extends javax.swing.JFrame {
String FILENAME = "Staff.txt";
String[] savedData;
DefaultTableModel dm;
    /**
     * Creates new form AddEditDeleteStaff
     */
    public AddEditDeleteStaffUI() {
        initComponents();
        setLocationRelativeTo(null);
    }
DefaultTableModel model;
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        Specality = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        TelephoneTxt = new javax.swing.JTextField();
        editBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        SearchTxt = new javax.swing.JTextField();
        GenderBtn1 = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PostCodeTxt = new javax.swing.JTextField();
        GenderBtn2 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        StaffIDTxt = new javax.swing.JTextField();
        firstNameTxt = new javax.swing.JTextField();
        surnameTxt = new javax.swing.JTextField();
        address1Txt = new javax.swing.JTextField();
        address2Txt = new javax.swing.JTextField();
        DOBTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        StaffTable = new javax.swing.JTable();
        SpecalityCMB = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        TitleCMB = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel7.setText("DOB");

        Specality.setText("Specality");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        jLabel9.setText("Gender");

        jLabel1.setText("StaffID");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "StaffID", "FirstName", "Surname" }));

        GenderBtn1.setText("Male");
        GenderBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderBtn1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Postcode");

        jLabel2.setText("FirstName");

        GenderBtn2.setText("Female");

        jLabel3.setText("Surname");

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("address1");

        jLabel5.setText("address2");

        jLabel6.setText("TeleNum");

        address1Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address1TxtActionPerformed(evt);
            }
        });

        StaffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StaffID", "FirstName", "Surname", "Title", "Address1", "Address 2", "DOB", "PostCode", "TelephoneNumber", "Specality", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        StaffTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StaffTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StaffTable);

        SpecalityCMB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Receptionist", "General dentist", "Dental Hygenist", "Finance Manager", "Owner" }));
        SpecalityCMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpecalityCMBActionPerformed(evt);
            }
        });

        jLabel8.setText("Title");

        TitleCMB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Mrs", "Miss", "Ms", "Sir" }));

        jButton1.setText("Sort");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ascending", "desending" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(SearchBtn)
                .addGap(13, 13, 13)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(BackBtn)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(23, 23, 23)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6)
                            .addComponent(Specality))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TelephoneTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(PostCodeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(SpecalityCMB, 0, 1, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4))
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StaffIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(address1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(address2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GenderBtn2)
                            .addComponent(GenderBtn1)
                            .addComponent(DOBTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TitleCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(clearBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(StaffIDTxt)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(TitleCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(address1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(address2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(DOBTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PostCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TelephoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SpecalityCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Specality))
                                .addGap(18, 18, 18)
                                .addComponent(GenderBtn1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GenderBtn2)
                        .addGap(25, 25, 25))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn)
                            .addComponent(editBtn)
                            .addComponent(deleteBtn))
                        .addGap(18, 18, 18)
                        .addComponent(clearBtn)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchBtn)
                                    .addComponent(jButton1)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(BackBtn)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        model = (DefaultTableModel) StaffTable.getModel();
        
        String gender = "";
        String splitBy = ",";
        String id = StaffIDTxt.getText();
        String firstname = firstNameTxt.getText();
        String surname = surnameTxt.getText();
        String titleValue = TitleCMB.getSelectedItem().toString();
        String address1 = address1Txt.getText();
        String address2 = address2Txt.getText();
        String teleNum = TelephoneTxt.getText();
        String dob = DOBTxt.getText();
        String disability ="";
        String postcode = PostCodeTxt.getText();
        String specalityValue = SpecalityCMB.getSelectedItem().toString();
        if(GenderBtn1.isSelected()){
            gender = "Male";
        }else if(GenderBtn2.isSelected()){
            gender = "Female";
        }
       
        
        boolean validated= true;
        if(firstname.isEmpty() || surname.isEmpty() || gender.isEmpty() || address1.isEmpty() || 
            teleNum.isEmpty() || dob.isEmpty() || disability.isEmpty() || postcode.isEmpty()) {
            JOptionPane.showMessageDialog(null, "One or more fields are Empty, enter the missing fields");
            validated = false;
            
        }else {
            JOptionPane.showMessageDialog(null, "All fields have been entered");
        }
        Validation valObject = new Validation();
        if (valObject.isInt(id)== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "ID is not an integer");
        }
        if (valObject.isRange(Integer.parseInt(id))== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "ID is not in correct range ,choose between 0 and 10000");
        }
        if (valObject.isPresent(id)== false){
            validated = false;                                         
            JOptionPane.showMessageDialog(null, "ID is not present");
        }
        if (valObject.isLength(teleNum)== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "telephone mumber must be invalid, try again");
        }
        if (valObject.isDate(dob)== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "Incorrect date format");
        }
        if (valObject.isLookUp(titleValue)== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "Invalid title");
        }
        
        try {
            if (validated == true){
                FileWriter writer = new FileWriter(FILENAME, true);
                writer.write("\n" + id + splitBy + firstname + splitBy + surname + splitBy + titleValue + splitBy + address1 + splitBy
                    + address2 + splitBy + dob + splitBy + postcode + splitBy + teleNum + splitBy + specalityValue + splitBy + gender);
                writer.close();
                JOptionPane.showMessageDialog(null, "Success, details are stored in " + FILENAME);
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error with" + FILENAME);

        }
    }//GEN-LAST:event_addBtnActionPerformed
    
    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        String id = StaffIDTxt.getText();
        String firstname = firstNameTxt.getText();
        String surname = surnameTxt.getText();
         String gender = "";
        if(GenderBtn1.isSelected()){
            gender = "Male";
        }else if(GenderBtn2.isSelected()){
            gender = "Female";
        }
        String address1 = address1Txt.getText();
        String address2 = address2Txt.getText();
        String teleNum = TelephoneTxt.getText();
        String dob = DOBTxt.getText();
        
        String speciality = SpecalityCMB.getSelectedItem().toString();
        String postcode = PostCodeTxt.getText();
        
        
        
        String temp = "temp.txt";
        boolean deleted = false;
        boolean renamed = false; 
        File oldFile = new File(FILENAME);
        File newFile = new File(temp);
        String line; // Stores the current line that is being read
        String splitBy = ",";
       
        try{
            FileReader fr = new FileReader(oldFile);
            BufferedReader br = new BufferedReader(fr);
            FileWriter fw = new FileWriter(newFile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            
           
            while(((line = br.readLine()) != null)) {//runs until end of file (no lines left to read)
                savedData = line.split(","); //saved data is global array and therefore splits each element of that array using the ","
                
                if((savedData[0].equalsIgnoreCase(id))){ // if id is located in database 
                   bw.write("\n" + id + splitBy + firstname + splitBy + surname + splitBy + address1 + splitBy
                    + address2 + splitBy + dob + splitBy + postcode + splitBy + teleNum + splitBy + speciality + splitBy + gender); 
                    
                }else{
                   JOptionPane.showMessageDialog(null, "No PatientsID was found with this Number please try again");
                }
          }  
         bw.flush();
         bw.close(); 
         br.close();
        
         System.gc();
         
         deleted = oldFile.delete();
         renamed = newFile.renameTo(oldFile);
         
         if(renamed){
             JOptionPane.showMessageDialog(null, "Edited users details" + FILENAME);
             renamed = true;
         }else{
             System.err.println("Error with editing file");
         }
           
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Error with" + FILENAME);
        System.out.println(e);
        } 
        
        
        
        
        
        
        
        
    
        
        DefaultTableModel model = (DefaultTableModel) StaffTable.getModel();
        if( StaffTable.getSelectedRow()==-1){
            if( StaffTable.getSelectedRow()==0){
                JOptionPane.showMessageDialog(null,"Table is empty");
            }else{
                JOptionPane.showMessageDialog(null,"You must select a product");
            }
        }
        model.setValueAt(StaffIDTxt.getText(), StaffTable.getSelectedRow(),0);
        model.setValueAt(firstNameTxt.getText(), StaffTable.getSelectedRow(),1);
        model.setValueAt(surnameTxt.getText(), StaffTable.getSelectedRow(),2);
        model.setValueAt(TitleCMB.getSelectedItem(), StaffTable.getSelectedRow(),3);
        model.setValueAt(address1Txt.getText(), StaffTable.getSelectedRow(),4);
        model.setValueAt(address2Txt.getText(), StaffTable.getSelectedRow(),5);
        model.setValueAt(DOBTxt.getText(), StaffTable.getSelectedRow(),6);
        model.setValueAt(PostCodeTxt.getText(), StaffTable.getSelectedRow(),7);
        model.setValueAt(TelephoneTxt.getText(), StaffTable.getSelectedRow(),8);
        model.setValueAt(SpecalityCMB.getSelectedItem(), StaffTable.getSelectedRow(),9);
        model.setValueAt(GenderBtn1.getText(), StaffTable.getSelectedRow(),10);
        model.setValueAt(GenderBtn2.getText(), StaffTable.getSelectedRow(),10);
    }//GEN-LAST:event_editBtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        MainMenuUI menu = new MainMenuUI();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        String deleteid = StaffIDTxt.getText();
        String temp = "temp.txt";
        File oldFile = new File(FILENAME);
        File newFile = new File(temp);
        String line;
        boolean renamed = false;
        boolean deleted = false;
        try{
            FileReader fr = new FileReader(oldFile);
            BufferedReader br = new BufferedReader(fr);
            FileWriter fw = new FileWriter(newFile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            
           
            while(((line = br.readLine()) != null)) {
                savedData = line.split(",");
                if((savedData[0].equals(deleteid))){
                    
                    
                }else{
                    bw.write(line+"\n");
                }
          }  
         bw.flush();
         bw.close(); 
         br.close();
        
         System.gc();
         
         deleted = oldFile.delete();
         renamed = newFile.renameTo(oldFile);
         
         if(renamed){
             JOptionPane.showMessageDialog(null, "Deleted from user file " + FILENAME);
         }else{
             System.err.println("Error with deleting record from text file");
         }
           
       
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Error with" + FILENAME);
        System.out.println(e);
        } 
        
        int getSelectedRowForDeletetion =  StaffTable.getSelectedRow();
        //check is there is a row selected
        if (getSelectedRowForDeletetion >= 0){
            model.removeRow(getSelectedRowForDeletetion);
            JOptionPane.showMessageDialog(null,"Row deleted");
        }else {
            JOptionPane.showMessageDialog(null, "Unable to Delete");
        }
        

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        SearchTable();
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void GenderBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderBtn1ActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        ClearFields(); /// calls the subroutine to clear all fields (apart from genders radio buttons)
    }//GEN-LAST:event_clearBtnActionPerformed

    private void address1TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address1TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address1TxtActionPerformed

    private void SpecalityCMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpecalityCMBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SpecalityCMBActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            FileReader fr = new FileReader(FILENAME);
            BufferedReader br = new BufferedReader(fr);
            
            DefaultTableModel model = (DefaultTableModel)StaffTable.getModel();
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                String[] row = lines[i].toString().split(",");
                model.addRow(row);
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AddEditDeleteStaffUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void StaffTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StaffTableMouseClicked
        model = (DefaultTableModel) StaffTable.getModel();
        int selectedRow = StaffTable.getSelectedRow();
        
        StaffIDTxt.setText(model.getValueAt(selectedRow, 0).toString());
        firstNameTxt.setText(model.getValueAt(selectedRow, 1).toString());
        surnameTxt.setText(model.getValueAt(selectedRow, 2).toString());
        TitleCMB.setSelectedItem(model.getValueAt(selectedRow, 3).toString());
        address1Txt.setText(model.getValueAt(selectedRow, 4).toString());
        address2Txt.setText(model.getValueAt(selectedRow, 5).toString());
        DOBTxt.setText(model.getValueAt(selectedRow, 6).toString());
        PostCodeTxt.setText(model.getValueAt(selectedRow,7).toString());
        TelephoneTxt.setText(model.getValueAt(selectedRow, 8).toString());
        SpecalityCMB.setSelectedItem(model.getValueAt(selectedRow, 9).toString());
        
        String tableGender = model.getValueAt(selectedRow, 10).toString();
        switch(tableGender){
            case "Male":
            GenderBtn1.setSelected(true);
            GenderBtn2.setSelected(false);
            break;
            case "Female":
            GenderBtn1.setSelected(false);
            GenderBtn2.setSelected(true);
            break;
       }      
    }//GEN-LAST:event_StaffTableMouseClicked
      private void ClearFields(){
        StaffIDTxt.setText("");
        firstNameTxt.setText("");
        surnameTxt.setText("");
        TitleCMB.setSelectedIndex(0);
        address1Txt.setText("");
        address2Txt.setText("");
        TelephoneTxt.setText("");
        DOBTxt.setText("");
        PostCodeTxt.setText("");
        SpecalityCMB.setSelectedIndex(0);
        GenderBtn1.setSelected(false);
        GenderBtn2.setSelected(false); 
    }
    


    private void SearchTable(){
        boolean found = false; // boolean flag to indicate if search string found
        String line; // string to temporarily store the line/record read from the file
        try{
        // Create a file reader object 
        FileReader fileReader = new FileReader(FILENAME);
        BufferedReader bufferRead = new BufferedReader(fileReader);
        // Loop through file line by line until the end of the file or until we have found it 
            while (((line = bufferRead.readLine()) != null) && (found == false)) {
                savedData = line.split(","); 
                //check if the record matches
                if(savedData [0].equalsIgnoreCase(SearchTxt.getText())){
                    found = true; // set found to true to stop looping 
                }
        }
 
        if (found == true){  
            Details(savedData); //display data in the correct text fields 
        }else{
            JOptionPane.showMessageDialog(null, "couldnt find", "Search", JOptionPane.INFORMATION_MESSAGE);
        }
        fileReader.close();  // close file 
        }catch(IOException ex){
            System.err.println("error");
        }
    }
     private void Details(String[] dataArray){ 
        StaffIDTxt.setText(dataArray[0]);        //outputing the searched details into the correct details
        firstNameTxt.setText(dataArray[1]);    
        surnameTxt.setText(dataArray[2]); 
        TitleCMB.setSelectedItem(dataArray[3]);
        address1Txt.setText(dataArray[3]);
        address2Txt.setText(dataArray[4]);
        DOBTxt.setText(dataArray[5]);
        PostCodeTxt.setText(dataArray[6]);
        TelephoneTxt.setText(dataArray[7]);
        SpecalityCMB.setSelectedItem(dataArray[8]);
        GenderBtn1.setText(dataArray[9]); 
        GenderBtn2.setText(dataArray[10]);
     }

 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEditDeleteStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEditDeleteStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEditDeleteStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEditDeleteStaffUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEditDeleteStaffUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JTextField DOBTxt;
    private javax.swing.JRadioButton GenderBtn1;
    private javax.swing.JRadioButton GenderBtn2;
    private javax.swing.JTextField PostCodeTxt;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JLabel Specality;
    private javax.swing.JComboBox<String> SpecalityCMB;
    private javax.swing.JTextField StaffIDTxt;
    private javax.swing.JTable StaffTable;
    private javax.swing.JTextField TelephoneTxt;
    private javax.swing.JComboBox<String> TitleCMB;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField address1Txt;
    private javax.swing.JTextField address2Txt;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField surnameTxt;
    // End of variables declaration//GEN-END:variables
}
