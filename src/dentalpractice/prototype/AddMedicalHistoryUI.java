package dentalpractice.prototype;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author wake5
 */
public class AddMedicalHistoryUI extends javax.swing.JFrame {
String FILENAME = "MedicalHistory.txt";
String[] savedData;
String PTFILENAME = "Patients.txt";
    /**
     * Creates new form MedicalHistory
     */
    public AddMedicalHistoryUI() {
        initComponents();
        setLocationRelativeTo(null);
    }
    DefaultTableModel model;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        PatientIDTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RFBtn = new javax.swing.JRadioButton();
        HBPBtn = new javax.swing.JRadioButton();
        BronchitisBtn = new javax.swing.JRadioButton();
        EmphysemaBtn = new javax.swing.JRadioButton();
        HBBtn = new javax.swing.JRadioButton();
        HIVBtn = new javax.swing.JRadioButton();
        LDBtn = new javax.swing.JRadioButton();
        HFBtn = new javax.swing.JRadioButton();
        PregBtn = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        DentistNotesTxt = new javax.swing.JTextField();
        TreatmentGivenTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        MedTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        MedIDTxt = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        PMFBtn = new javax.swing.JRadioButton();
        AnginaBtn = new javax.swing.JRadioButton();
        HMBtn = new javax.swing.JRadioButton();
        Pneumonia = new javax.swing.JRadioButton();
        SmokerBtn = new javax.swing.JRadioButton();
        CFBtn = new javax.swing.JRadioButton();
        AnaemiaBtn = new javax.swing.JRadioButton();
        SCBtn = new javax.swing.JRadioButton();
        BTBtn = new javax.swing.JRadioButton();
        HaemophiliaBtn = new javax.swing.JRadioButton();
        DiabetesBtn = new javax.swing.JRadioButton();
        EpilepsyBtn = new javax.swing.JRadioButton();
        KDBtn = new javax.swing.JRadioButton();
        CancerBtn = new javax.swing.JRadioButton();
        HiatusHerniaBtn = new javax.swing.JRadioButton();
        PencillinBtn = new javax.swing.JRadioButton();
        AsthmaBtn = new javax.swing.JRadioButton();
        EczemaBtn = new javax.swing.JRadioButton();
        AJBtn = new javax.swing.JRadioButton();
        LABtn = new javax.swing.JRadioButton();
        ABCBtn = new javax.swing.JRadioButton();
        SortBtn = new javax.swing.JButton();
        OrderCMB = new javax.swing.JComboBox<>();
        SearchBtn = new javax.swing.JButton();
        SearchTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Adding Patients Medical History");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("PatientsID");

        jButton2.setText("Back");
        jButton2.setToolTipText("");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Heart:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Chest:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Blood:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Other:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Allergies:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Warnings:");

        RFBtn.setText("Rheumatic Fever");

        HBPBtn.setText("High Blood Pressure");

        BronchitisBtn.setText("Bronchitis");

        EmphysemaBtn.setText("Emphysema");
        EmphysemaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmphysemaBtnActionPerformed(evt);
            }
        });

        HBBtn.setText("HepatitisB");

        HIVBtn.setText("H.I.V");

        LDBtn.setText("Liver Disease");

        HFBtn.setText("Hayfever");

        PregBtn.setText("Pregnant");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Notes");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Treatment");

        MedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MedicalID", "Heart", "Chest", "Blood", "Other", "Allergies", "Warnings", "NotesFromDentists", "TreatmentGiven", "PatientID"
            }
        ));
        jScrollPane1.setViewportView(MedTable);
        if (MedTable.getColumnModel().getColumnCount() > 0) {
            MedTable.getColumnModel().getColumn(0).setMinWidth(50);
            MedTable.getColumnModel().getColumn(0).setMaxWidth(50);
            MedTable.getColumnModel().getColumn(9).setMinWidth(50);
            MedTable.getColumnModel().getColumn(9).setMaxWidth(50);
        }

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("MedicalID");

        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        EditBtn.setText("Edit");
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete");

        PMFBtn.setText("PaceMakerFitted");

        AnginaBtn.setText("Angina");

        HMBtn.setText("Heart Murmur");

        Pneumonia.setText("Pneumonia");
        Pneumonia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PneumoniaActionPerformed(evt);
            }
        });

        SmokerBtn.setText("Smoker");
        SmokerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SmokerBtnActionPerformed(evt);
            }
        });

        CFBtn.setText("Cystic Fibrosis");
        CFBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CFBtnActionPerformed(evt);
            }
        });

        AnaemiaBtn.setText("Anaemia");

        SCBtn.setText("Sickle Cell");

        BTBtn.setText("Blood Test");

        HaemophiliaBtn.setText("Haemophilia");

        DiabetesBtn.setText("Diabetes");

        EpilepsyBtn.setText("Epilepsy");

        KDBtn.setText("Kidney Disease");

        CancerBtn.setText("Cancer");

        HiatusHerniaBtn.setText("Hiatus Hernia");

        PencillinBtn.setText("Pencillin");

        AsthmaBtn.setText("Asthamtic");

        EczemaBtn.setText("Eczema");

        AJBtn.setText("Artifiical Joint");

        LABtn.setText("Latex Allergy");

        ABCBtn.setText("Anti Biotic Cover");

        SortBtn.setText("Sort");
        SortBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortBtnActionPerformed(evt);
            }
        });

        OrderCMB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ascedning", "descedning" }));

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("ID");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Given");
        jLabel5.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(741, 741, 741))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(AddBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EditBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DeleteBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(jLabel3)))
                        .addGap(91, 91, 91)
                        .addComponent(SearchBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(253, 253, 253)
                                .addComponent(SortBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OrderCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(47, 47, 47))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TreatmentGivenTxt))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DentistNotesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PMFBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HMBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AnginaBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(SmokerBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CFBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BronchitisBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EmphysemaBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Pneumonia))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(EpilepsyBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancerBtn)
                        .addGap(4, 4, 4)
                        .addComponent(HiatusHerniaBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LABtn)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(PregBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ABCBtn)
                            .addComponent(AJBtn)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HFBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PencillinBtn)
                                .addGap(96, 96, 96))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(244, 244, 244))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(DiabetesBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(LDBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(KDBtn))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(AsthmaBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EczemaBtn))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel14))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(MedIDTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                            .addComponent(PatientIDTxt)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(RFBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(HBPBtn))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(SCBtn)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                            .addComponent(HaemophiliaBtn)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(BTBtn))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(HIVBtn)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(HBBtn)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(AnaemiaBtn))))
                                .addGap(10, 10, 10)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddBtn)
                        .addComponent(EditBtn)
                        .addComponent(DeleteBtn)
                        .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SearchBtn)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SortBtn)
                        .addComponent(OrderCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PatientIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(MedIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(RFBtn)
                    .addComponent(HBPBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AnginaBtn)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PMFBtn)
                        .addComponent(HMBtn)))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(BronchitisBtn)
                    .addComponent(EmphysemaBtn)
                    .addComponent(Pneumonia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SmokerBtn)
                    .addComponent(CFBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(HIVBtn)
                    .addComponent(HBBtn)
                    .addComponent(AnaemiaBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SCBtn)
                    .addComponent(BTBtn)
                    .addComponent(HaemophiliaBtn))
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DiabetesBtn)
                    .addComponent(LDBtn)
                    .addComponent(KDBtn))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EpilepsyBtn)
                    .addComponent(CancerBtn)
                    .addComponent(HiatusHerniaBtn))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HFBtn)
                    .addComponent(PencillinBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AsthmaBtn)
                    .addComponent(EczemaBtn))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PregBtn)
                    .addComponent(AJBtn)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LABtn)
                    .addComponent(ABCBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DentistNotesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TreatmentGivenTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            FileReader fr = new FileReader(FILENAME);
            BufferedReader br = new BufferedReader(fr);
            
            DefaultTableModel model = (DefaultTableModel)MedTable.getModel();
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                String[] row = lines[i].toString().split(",");
                model.addRow(row);
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AddMedicalHistoryUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    }//GEN-LAST:event_formWindowOpened

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        //SearchTable();
        String SearchVal = SearchTxt.getText();
        Search search = new Search();

        Search.binarySearch(FILENAME,SearchVal);

    }//GEN-LAST:event_SearchBtnActionPerformed

    private void SortBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortBtnActionPerformed
        FileToArray arrays = new FileToArray();

        String[] oneDArray = arrays.fileToOneD(FILENAME);
        String[][] twoDArray = arrays.oneDToTwoD(oneDArray);

        Sort sort = new Sort();
        if(OrderCMB.getSelectedIndex() == 0){
            sort.bubbleSort(FILENAME,twoDArray);
        }
        else if(OrderCMB.getSelectedIndex() == 1){
            sort.bubbleSortDescending(FILENAME,twoDArray);
        }
    }//GEN-LAST:event_SortBtnActionPerformed

    private void CFBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CFBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CFBtnActionPerformed

    private void SmokerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SmokerBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SmokerBtnActionPerformed

    private void PneumoniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PneumoniaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PneumoniaActionPerformed

    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtnActionPerformed
        String splitBy = ",";
        String Medid = MedIDTxt.getText();
        String PatientID = PatientIDTxt.getText();
        String notes = DentistNotesTxt.getText();
        String TG = TreatmentGivenTxt.getText();
        String Heart1 = "";  String Chest1 = "";   String Blood1 = ""; String Other1 = ""; String Allergies1 = ""; String Warnings1 = "";
        String Heart2 = "";  String Chest2 = "";   String Blood2 = ""; String Other2 = ""; String Allergies2 = ""; String Warnings2 = "";
        String Heart3 = "";  String Chest3 = "";   String Blood3 = ""; String Other3 = ""; String Allergies3 = ""; String Warnings3 = "";
        String Heart4 = "";  String Chest4 = "";   String Blood4 = ""; String Other4 = ""; String Allergies4 = ""; String Warnings4 = "";
        String Heart5 = "";  String Chest5 = "";   String Blood5 = ""; String Other5 = "";
        String Blood6 = ""; String Other6 = "";

        if(RFBtn.isSelected()){
            Heart1 = "Rheumatic fever";
        }
        if(HBPBtn.isSelected()){
            Heart2 = "HighBlood Pressure";
        }
        if(PMFBtn.isSelected()){
            Heart3 = "Pacemaker Fitted";
        }
        if(HMBtn.isSelected()){
            Heart4 = "Heart Murmur";
        }
        if(AnginaBtn.isSelected()){
            Heart5 = "Angina";
        }
        if(BronchitisBtn.isSelected()){
            Chest1 = "Bronchitis";
        }
        if(EmphysemaBtn.isSelected()){
            Chest2 = "Emphysema";
        }
        if(Pneumonia.isSelected()){
            Chest3 = "Pneumonia";
        }
        if(SmokerBtn.isSelected()){
            Chest4 = "Smoker";
        }
        if(CFBtn.isSelected()){
            Chest5 = "Cystic Fibrosis";
        }
        if(HIVBtn.isSelected()){
            Blood1 = "Diabetes";
        }
        if(HBBtn.isSelected()){
            Blood2 = "HepatitisB";
        }
        if(AnaemiaBtn.isSelected()){
            Blood3 = "Anaemia";
        }
        if(SCBtn.isSelected()){
            Blood4 = "Sickle Cell";
        }
        if(HaemophiliaBtn.isSelected()){
            Blood5 = "Haemophilia";
        }
        if(BTBtn.isSelected()){
            Blood6 = "Blood Test";
        }if(DiabetesBtn.isSelected()){
            Other1 = "Diabetes";
        }
        if(LDBtn.isSelected()){
            Other2 = "Liver Disease";
        }
        if(KDBtn.isSelected()){
            Other3 = "Kidney disease";
        }
        if(EpilepsyBtn.isSelected()){
            Other4 = "Sickle Cell";
        }
        if(CancerBtn.isSelected()){
            Other5 = "Cancer";
        }
        if(HiatusHerniaBtn.isSelected()){
            Other6 = "Hiatus Hernia";
        }
        if(HFBtn.isSelected()){
            Allergies1 = "Hay Fever";
        }
        if(PencillinBtn.isSelected()){
            Allergies2 = "Liver Pencillin";
        }
        if(EczemaBtn.isSelected()){
            Allergies3 = "Eczema";
        }
        if(AsthmaBtn.isSelected()){
            Allergies4 = "Asthma";
        }
        if(PregBtn.isSelected()){
            Warnings1 = "Pregnant";
        }
        if(AJBtn.isSelected()){
            Warnings2 = "Artificial Joint";
        }
        if(LABtn.isSelected()){
            Warnings3 = "Latex Allergy";
        }
        if(ABCBtn.isSelected()){
            Warnings4 = "Anti Biotic Cocver";
        }

        String temp = "temp.txt";
        boolean deleted = false;
        boolean renamed = false;
        File oldFile = new File(FILENAME);
        File newFile = new File(temp);
        String line; // Stores the current line that is being read

        try{
            FileReader fr = new FileReader(oldFile);
            BufferedReader br = new BufferedReader(fr);
            FileWriter fw = new FileWriter(newFile, true);
            BufferedWriter bw = new BufferedWriter(fw);

            while((line = br.readLine()) != null) {//runs until end of file (no lines left to read)
                savedData = line.split(","); //saved data is global array and therefore splits each element of that array using the ","

                if(savedData[0].matches(Medid)){ // if id is located in database and matches the id Field

                    bw.write("\n" + Medid + splitBy + Heart1 + " " + Heart2+ " " + Heart3+ " " + Heart4+ " "+ Heart5 + splitBy +
                        Chest1 + " " + Chest2 + " " + Chest3 + " " + Chest4 + " " + Chest5 + splitBy + Blood1 + " " +Blood2 + " " +Blood3 + " " +
                        Blood4 + " " + Blood5 + " " + Blood6 + " " +splitBy + Other1 + " " +Other2 + " " +Other3 + " " +Other4 + " " +Other5 + " " +
                        Other6 + splitBy + Allergies1 + " " + Allergies2 + " " +Allergies3 + " " +Allergies4 + splitBy + Warnings1+ " " +
                        Warnings2+ " " +Warnings3+ " " +Warnings4+ splitBy + notes + splitBy + TG);
                }else{

                    JOptionPane.showMessageDialog(null, "No PatientsID was found with this Number please try again");
                }

            }
            bw.flush();
            bw.close();
            br.close();

            System.gc();

            deleted = oldFile.delete();
            renamed = newFile.renameTo(oldFile);

            if(renamed){
                JOptionPane.showMessageDialog(null, "Edited users details" + FILENAME);
                renamed = true;
            }else{
                System.err.println("Error with renaming text file");
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error with" + FILENAME);
            System.out.println(e);
        }

        int selectedRow = MedTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) MedTable.getModel();
        if( MedTable.getSelectedRow()==-1){
            if( MedTable.getSelectedRow()==0){
                JOptionPane.showMessageDialog(null,"Table is empty");
            }else{
                JOptionPane.showMessageDialog(null,"cannot edit table");
            }
        }
        model.setValueAt(Medid, MedTable.getSelectedRow(),0);
        model.setValueAt(notes, MedTable.getSelectedRow(),7);
        model.setValueAt(TG, MedTable.getSelectedRow(),8);
        model.setValueAt(PatientID, MedTable.getSelectedRow(),9);
        model.setValueAt(Heart1,MedTable.getSelectedRow(),1);
        model.setValueAt(Heart2,MedTable.getSelectedRow(),1);
        model.setValueAt(Heart3,MedTable.getSelectedRow(),1);
        model.setValueAt(Heart4,MedTable.getSelectedRow(),1);
        model.setValueAt(Heart5,MedTable.getSelectedRow(),1);
        model.setValueAt(Chest1,MedTable.getSelectedRow(),2);
        model.setValueAt(Chest2,MedTable.getSelectedRow(),2);
        model.setValueAt(Chest3,MedTable.getSelectedRow(),2);
        model.setValueAt(Chest4,MedTable.getSelectedRow(),2);
        model.setValueAt(Chest5,MedTable.getSelectedRow(),2);
        model.setValueAt(Blood1,MedTable.getSelectedRow(),3);
        model.setValueAt(Blood2,MedTable.getSelectedRow(),3);
        model.setValueAt(Blood3,MedTable.getSelectedRow(),3);
        model.setValueAt(Blood4,MedTable.getSelectedRow(),3);
        model.setValueAt(Blood5,MedTable.getSelectedRow(),3);
        model.setValueAt(Blood6,MedTable.getSelectedRow(),3);
        model.setValueAt(Other1,MedTable.getSelectedRow(),4);
        model.setValueAt(Other2,MedTable.getSelectedRow(),4);
        model.setValueAt(Other3,MedTable.getSelectedRow(),4);
        model.setValueAt(Other4,MedTable.getSelectedRow(),4);
        model.setValueAt(Other6,MedTable.getSelectedRow(),4);
        model.setValueAt(Other6,MedTable.getSelectedRow(),4);
        model.setValueAt(Allergies1,MedTable.getSelectedRow(),5);
        model.setValueAt(Allergies2,MedTable.getSelectedRow(),5);
        model.setValueAt(Allergies3,MedTable.getSelectedRow(),5);
        model.setValueAt(Allergies4,MedTable.getSelectedRow(),5);
        model.setValueAt(Warnings1,MedTable.getSelectedRow(),6);
        model.setValueAt(Warnings2,MedTable.getSelectedRow(),6);
        model.setValueAt(Warnings3,MedTable.getSelectedRow(),6);
        model.setValueAt(Warnings4,MedTable.getSelectedRow(),6);

    }//GEN-LAST:event_EditBtnActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        model = (DefaultTableModel) MedTable.getModel();
        String splitBy = ",";
        String Medid = MedIDTxt.getText();
        String PatientID = PatientIDTxt.getText();

        String Heart1 = "";  String Chest1 = "";   String Blood1 = ""; String Other1 = ""; String Allergies1 = ""; String Warnings1 = "";
        String Heart2 = "";  String Chest2 = "";   String Blood2 = ""; String Other2 = ""; String Allergies2 = ""; String Warnings2 = "";
        String Heart3 = "";  String Chest3 = "";   String Blood3 = ""; String Other3 = ""; String Allergies3 = ""; String Warnings3 = "";
        String Heart4 = "";  String Chest4 = "";   String Blood4 = ""; String Other4 = ""; String Allergies4 = ""; String Warnings4 = "";
        String Heart5 = "";  String Chest5 = "";   String Blood5 = ""; String Other5 = "";
        String Blood6 = ""; String Other6 = "";

        if(RFBtn.isSelected()){
            Heart1 = "Rheumatic fever";
        }
        if(HBPBtn.isSelected()){
            Heart2 = "HighBlood Pressure";
        }
        if(PMFBtn.isSelected()){
            Heart3 = "Pacemaker Fitted";
        }
        if(HMBtn.isSelected()){
            Heart4 = "Heart Murmur";
        }
        if(AnginaBtn.isSelected()){
            Heart5 = "Angina";
        }
        if(BronchitisBtn.isSelected()){
            Chest1 = "Bronchitis";
        }
        if(EmphysemaBtn.isSelected()){
            Chest2 = "Emphysema";
        }
        if(Pneumonia.isSelected()){
            Chest3 = "Pneumonia";
        }
        if(SmokerBtn.isSelected()){
            Chest4 = "Smoker";
        }
        if(CFBtn.isSelected()){
            Chest5 = "Cystic Fibrosis";
        }
        if(HIVBtn.isSelected()){
            Blood1 = "Diabetes";
        }
        if(HBBtn.isSelected()){
            Blood2 = "HepatitisB";
        }
        if(AnaemiaBtn.isSelected()){
            Blood3 = "Anaemia";
        }
        if(SCBtn.isSelected()){
            Blood4 = "Sickle Cell";
        }
        if(HaemophiliaBtn.isSelected()){
            Blood5 = "Haemophilia";
        }
        if(BTBtn.isSelected()){
            Blood6 = "Blood Test";
        }if(DiabetesBtn.isSelected()){
            Other1 = "Diabetes";
        }
        if(LDBtn.isSelected()){
            Other2 = "Liver Disease";
        }
        if(KDBtn.isSelected()){
            Other3 = "Kidney disease";
        }
        if(EpilepsyBtn.isSelected()){
            Other4 = "Sickle Cell";
        }
        if(CancerBtn.isSelected()){
            Other5 = "Cancer";
        }
        if(HiatusHerniaBtn.isSelected()){
            Other6 = "Hiatus Hernia";
        }
        if(HFBtn.isSelected()){
            Allergies1 = "Hay Fever";
        }
        if(PencillinBtn.isSelected()){
            Allergies2 = "Liver Pencillin";
        }
        if(EczemaBtn.isSelected()){
            Allergies3 = "Eczema";
        }
        if(AsthmaBtn.isSelected()){
            Allergies4 = "Asthma";
        }
        if(PregBtn.isSelected()){
            Warnings1 = "Pregnant";
        }
        if(AJBtn.isSelected()){
            Warnings2 = "Artificial Joint";
        }
        if(LABtn.isSelected()){
            Warnings3 = "Latex Allergy";
        }
        if(ABCBtn.isSelected()){
            Warnings4 = "Anti Biotic Cocver";
        }
        String notes = DentistNotesTxt.getText();
        String TG = TreatmentGivenTxt.getText();

        boolean validated = true;
        Validation valObject = new Validation();
        if (valObject.isRange(Integer.parseInt(PatientID))== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "ID is not in correct range ,choose between 0 and 10000");
        }

        if (valObject.isRange(Integer.parseInt(Medid))== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "ID is not in correct range ,choose between 0 and 10000");
        }
        if (valObject.isPresent(Medid)== false){
            validated = false;
            JOptionPane.showMessageDialog(null, "ID is not present");
        }
        try {
            boolean found = false;
            String line;
            FileReader fr = new FileReader(PTFILENAME);
            BufferedReader br = new BufferedReader(fr);
            while(((line = br.readLine()) != null)) {//runs until end of file (no lines left to read)
                savedData = line.split(",");
            if(savedData[0].equalsIgnoreCase(PatientIDTxt.getText())){
                    found = true;
            }
            }
            if( found == true){
                validated = true;
            }else{
                validated = false;
                JOptionPane.showMessageDialog(null,"patient id not found");
            }
            
            if (validated == true){
                FileWriter fw = new FileWriter(FILENAME, true);
                fw.write("\n" + Medid + splitBy + Heart1 + " " + Heart2+ " " + Heart3+ " " + Heart4+ " "+ Heart5 + splitBy +
                    Chest1 + " " + Chest2 + " " + Chest3 + " " + Chest4 + " " + Chest5 + splitBy + Blood1 + " " +Blood2 + " " +Blood3 + " " +
                    Blood4 + " " + Blood5 + " " + Blood6 + " " +splitBy + Other1 + " " +Other2 + " " +Other3 + " " +Other4 + " " +Other5 + " " +
                    Other6 + splitBy + Allergies1 + " " + Allergies2 + " " +Allergies3 + " " +Allergies4 + splitBy + Warnings1+ " " +
                    Warnings2+ " " +Warnings3+ " " +Warnings4+ splitBy + notes + splitBy + TG + splitBy+ PatientID);

                fw.close();
                JOptionPane.showMessageDialog(null, "Success, details are stored in " + FILENAME);
                model.addRow(new Object[] {Medid,Heart1+Heart2+Heart3+Heart4+Heart5,Chest1+Chest2+Chest3+Chest4+Chest5,
                    Blood1+Blood2+Blood3+Blood4+Blood5+Blood6,Other1+Other2+Other3+Other4+Other5+Other6,Allergies1+Allergies2
                    +Allergies3+Allergies4,Warnings1+Warnings2+Warnings3+Warnings4,notes,TG,PatientID});
        }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error with" + FILENAME);

        }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void EmphysemaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmphysemaBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmphysemaBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMedicalHistoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMedicalHistoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMedicalHistoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMedicalHistoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMedicalHistoryUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ABCBtn;
    private javax.swing.JRadioButton AJBtn;
    private javax.swing.JButton AddBtn;
    private javax.swing.JRadioButton AnaemiaBtn;
    private javax.swing.JRadioButton AnginaBtn;
    private javax.swing.JRadioButton AsthmaBtn;
    private javax.swing.JRadioButton BTBtn;
    private javax.swing.JRadioButton BronchitisBtn;
    private javax.swing.JRadioButton CFBtn;
    private javax.swing.JRadioButton CancerBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField DentistNotesTxt;
    private javax.swing.JRadioButton DiabetesBtn;
    private javax.swing.JRadioButton EczemaBtn;
    private javax.swing.JButton EditBtn;
    private javax.swing.JRadioButton EmphysemaBtn;
    private javax.swing.JRadioButton EpilepsyBtn;
    private javax.swing.JRadioButton HBBtn;
    private javax.swing.JRadioButton HBPBtn;
    private javax.swing.JRadioButton HFBtn;
    private javax.swing.JRadioButton HIVBtn;
    private javax.swing.JRadioButton HMBtn;
    private javax.swing.JRadioButton HaemophiliaBtn;
    private javax.swing.JRadioButton HiatusHerniaBtn;
    private javax.swing.JRadioButton KDBtn;
    private javax.swing.JRadioButton LABtn;
    private javax.swing.JRadioButton LDBtn;
    private javax.swing.JTextField MedIDTxt;
    private javax.swing.JTable MedTable;
    private javax.swing.JComboBox<String> OrderCMB;
    private javax.swing.JRadioButton PMFBtn;
    private javax.swing.JTextField PatientIDTxt;
    private javax.swing.JRadioButton PencillinBtn;
    private javax.swing.JRadioButton Pneumonia;
    private javax.swing.JRadioButton PregBtn;
    private javax.swing.JRadioButton RFBtn;
    private javax.swing.JRadioButton SCBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JRadioButton SmokerBtn;
    private javax.swing.JButton SortBtn;
    private javax.swing.JTextField TreatmentGivenTxt;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
